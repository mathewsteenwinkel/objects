const library = {
	tracks: {
		t01: {
			id: "t01",
			name: "Code Monkey",
			artist: "Jonathan Coulton",
			album: "Thing a Week Three"
		},
		t02: {
			id: "t02",
			name: "Model View Controller",
			artist: "James Dempsey",
			album: "WWDC 2003"
		},
		t03: {
			id: "t03",
			name: "Four Thirty-Three",
			artist: "John Cage",
			album: "Woodstock 1952"
		}
	},
	playlists: {
		p01: {
			id: "p01",
			name: "Coding Music",
			tracks: ["t01", "t02"]
		},
		p02: {
			id: "p02",
			name: "Other Playlist",
			tracks: ["t03"]
		}
	}
};

/////////////////////////////
// FUNCTIONS TO IMPLEMENT:
/////////////////////////////

// prints a list of all playlists, in the form:
// p01: Coding Music - 2 tracks
// p02: Other Playlist - 1 tracks

const printPlaylists = function () {
	for (let playlistId in library.playlists) {
		var playlist = library.playlists[playlistId]
		console.log(`${playlist.id}: ${playlist.name} - ${playlist.tracks.length} tracks `)
	}
}
//printPlaylists()

// prints a list of all tracks, using the following format:
// t01: Code Monkey by Jonathan Coulton (Thing a Week Three)
// t02: Model View Controller by James Dempsey (WWDC 2003)
// t03: Four Thirty-Three by John Cage (Woodstock 1952)
const printTracks = function () {
	for (let tracksId in library.tracks) {
		var tracks = library.tracks[tracksId]
		console.log(`${tracks.id}: ${tracks.name} by ${tracks.artist} (${tracks.album})`)
	}
}
//printTracks()

// prints a list of tracks for a given playlist, using the following format:
// p01: Coding Music - 2 tracks
// t01: Code Monkey by Jonathan Coulton (Thing a Week Three)
// t02: Model View Controller by James Dempsey (WWDC 2003)
const printPlaylist = function (playlistId) {
	for (let i in library.playlists) {
		if (i === playlistId) {
			return i + ':' + library.playlists[i].name + ' ' + '- ' + library.playlists[i].tracks.length + 'tracks'

		}
	}
}
//console.log(printPlaylist("p02"))

// adds an existing track to an existing playlist
const addTrackToPlaylist = function (trackId, playlistId) {
	for (let i in library.tracks) {
		if (i === trackId) {
			trackId = {
				id: library.tracks[i].id,
				name: library.tracks[i].name,
				artist: library.tracks[i].artist,
				album: library.tracks[i].album
			}
		}
	}
	for (let i in library.playlists) {
		if (i === playlistId) {
			library.playlists[i] = trackId
		}
		//console.log([i])
	}
	return library
	//console.log(JSON.stringify((library)));
}
//console.log(addTrackToPlaylist("t02", "p02"));

// generates a unique id
// (already implemented: use this for addTrack and addPlaylist)
const generateUid = function () {
	return Math.floor((1 + Math.random()) * 0x10000).toString(16).substring(1);
}


// adds a track to the library
const addTrack = function (name, artist, album) {
	const id = generateUid()
	const newTrack = {
		id,
		name,
		artist,
		album,
	}
	library.tracks[id] = newTrack
	return library.tracks


}
//console.log(addTrack("vertigo", "u2", "Vertigo"))




//adds a playlist to the library
const addPlaylist = function (name) {
	const id = generateUid()
	const newPlaylist = {
		id,
		name,
		tracks,
	}
	library.playlists[id] = newPlaylist
	return library.playlists
}
console.log(addPlaylist("not coding music", "t01"))


// STRETCH:
// given a query string string, prints a list of tracks
// where the name, artist or album contains the query string (case insensitive)
// tip: use "string".search("tri") 
// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/search
const printSearchResults = function (query) {

}
